---
description: 
globs: 
alwaysApply: true
---
# üöÄ METODOLOGIA AVAN√áADA - Resolu√ß√£o de Problemas e Implementa√ß√£o de Solu√ß√µes

Framework para m√°xima efici√™ncia e qualidade.

---

## üìã METODOLOGIA CORE - THINK ‚Üí REFLECT ‚Üí PLAN ‚Üí EXECUTE ‚Üí VERIFY ‚Üí LEARN

### 1. THINK (An√°lise Profunda)
- Classifica√ß√£o inicial: tipo, urg√™ncia, complexidade
- Perguntas essenciais: O que, Onde, Quando, Quem, Como, Por qu√™
- Mapeamento de arquitetura: Frontend, API, Backend, DB, Infra, Integra√ß√µes
- An√°lise de stakeholders
- Coleta de informa√ß√µes t√©cnicas e de neg√≥cio

---

### 2. REFLECT (An√°lise Cr√≠tica)
- Matriz de hip√≥teses: probabilidade, testabilidade, impacto, esfor√ßo
- Score de prioriza√ß√£o
- Armadilhas t√©cnicas, arquiteturais e humanas
- Estrat√©gia de pesquisa multi-canal

---

### 3. PLAN (Planejamento Estrat√©gico)
- Template TODO.md (vers√£o compacta):
  - Objetivo & contexto
  - Stakeholders
  - Hip√≥teses priorizadas
  - Insights de pesquisa
  - Plano de execu√ß√£o
  - Crit√©rios de sucesso e abort
  - M√©tricas de sucesso
- Estrat√©gias por complexidade: simples, m√©dio, complexo

---

### 4. EXECUTE (Execu√ß√£o Otimizada)
- Investiga√ß√£o por camadas: Infraestrutura, API, Frontend
- Execu√ß√£o paralela de ferramentas
- Princ√≠pios de implementa√ß√£o avan√ßados
- Padr√µes arquiteturais modernos

---

### 5. VERIFY (Valida√ß√£o Abrangente)
- Checklist de verifica√ß√£o:
  - Funcionalidade
  - Performance
  - UX/UI
  - Acessibilidade
  - Seguran√ßa
- Pir√¢mide de testes: unit√°rios, integra√ß√£o, E2E
- Monitoramento e alertas
- Protocolo de itera√ß√£o

---

### 6. LEARN (Aprendizado Sistematizado)
- Post-mortem (resumido):
  - Resumo executivo
  - O que funcionou bem
  - O que n√£o funcionou
  - Insights e aprendizados
  - Melhorias para pr√≥xima vez
  - Atualiza√ß√£o da base de conhecimento
  - Action items
- Classifica√ß√£o de learnings: t√°tico, estrat√©gico, cultural
- KPIs de aprendizado
- Estrat√©gias de compartilhamento
- Reconhecimento e incentivos

---

## üéØ CASOS DE ESTUDO (Resumidos)

- Performance Complexa:
  - Sintomas: lentid√£o, timeouts, CPU alto
  - Hip√≥teses: memory leak, queries N+1, bundle grande
  - A√ß√µes: profiling, rollback, an√°lise comparativa
  - Li√ß√µes: padr√µes de cleanup, alertas, checklist

- Feature Multi-Stakeholder:
  - Notifica√ß√µes real-time, m√∫ltiplos stakeholders
  - Complexidade alta, impacto cr√≠tico
  - A√ß√µes: workshops, rollout em fases, feature flags
  - Li√ß√µes: gest√£o de stakeholders, arquitetura real-time

- Crisis Management:
  - Sistema offline, impacto cr√≠tico
  - Hip√≥teses: pool DB, CDN, crash app
  - A√ß√µes: war room, rollback, comunica√ß√£o
  - Li√ß√µes: playbook de incidentes, thresholds, auto-scaling

---

## üõ°Ô∏è DIRETRIZES E BEST PRACTICES
- Princ√≠pios core: an√°lise antes de agir, execu√ß√£o paralela, decis√µes baseadas em dados, envolvimento de stakeholders, foco em resultado, aprendizado cont√≠nuo, qualidade desde o in√≠cio
- Guidelines de pesquisa: docs oficiais, issues, stack overflow, blogs, best practices, conhecimento interno
- Framework de decis√£o arquitetural (ADR)
- Crit√©rios de sucesso multidimensionais
- Mindset: pensamento cient√≠fico, design thinking, lean, colabora√ß√£o

---

**Esta vers√£o resumida mant√©m a ess√™ncia do framework, facilitando consulta r√°pida e aplica√ß√£o pr√°tica.**
